{
  "contractName": "CloneFactory",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Studium/WS_2021/Blockchain/votingdapp/contracts/utilities/CloneFactory.sol\":\"CloneFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Studium/WS_2021/Blockchain/votingdapp/contracts/utilities/CloneFactory.sol\":{\"keccak256\":\"0xc708e02769c21f91c508f652f83fa85295d22774230749625bc75e72a015f691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://417e164b4d58dee7db14d871a97fa27b1d1f828f016b09cd583d7dc2c950f00b\",\"dweb:/ipfs/QmZTe5LxEEWTu3iFU648qsMbkQuZkcrRHzmd4U6UcGQrgk\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220298fbeed35b1a102cb8cba9f5d7ec27b729c6bff9af5c928c2708b39db2200b064736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220298fbeed35b1a102cb8cba9f5d7ec27b729c6bff9af5c928c2708b39db2200b064736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "1312:480:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1312:480:4:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.25 <0.7.0;\r\n\r\n//Quelle: https://github.com/optionality/clone-factory\r\n\r\n/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2018 Murray Software, LLC.\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\nThe above copyright notice and this permission notice shall be included\r\nin all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n//solhint-disable max-line-length\r\n//solhint-disable no-inline-assembly\r\n\r\ncontract CloneFactory {\r\n  function createClone(address target) internal returns (address result) {\r\n    bytes20 targetBytes = bytes20(target);\r\n    assembly {\r\n      let clone := mload(0x40)\r\n      mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\r\n      mstore(add(clone, 0x14), targetBytes)\r\n      mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\r\n      result := create(0, clone, 0x37)\r\n    }\r\n  }\r\n}\r\n",
  "sourcePath": "D:\\Studium\\WS_2021\\Blockchain\\votingdapp\\contracts\\utilities\\CloneFactory.sol",
  "ast": {
    "absolutePath": "/D/Studium/WS_2021/Blockchain/votingdapp/contracts/utilities/CloneFactory.sol",
    "exportedSymbols": {
      "CloneFactory": [
        900
      ]
    },
    "id": 901,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 883,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 900,
        "linearizedBaseContracts": [
          900
        ],
        "name": "CloneFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "1410:379:4",
              "statements": [
                {
                  "assignments": [
                    891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 891,
                      "mutability": "mutable",
                      "name": "targetBytes",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 898,
                      "src": "1417:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 890,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1417:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 896,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 894,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "1447:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1439:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": {
                        "id": 892,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1439:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:15:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1417:37:4"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1470:314:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1479:24:4",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1498:4:4",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1492:5:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1492:11:4"
                        },
                        "variables": [
                          {
                            "name": "clone",
                            "nodeType": "YulTypedName",
                            "src": "1483:5:4",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1518:5:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1525:66:4",
                              "type": "",
                              "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1511:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1511:81:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1511:81:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:5:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1618:4:4",
                                  "type": "",
                                  "value": "0x14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1607:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1607:16:4"
                            },
                            {
                              "name": "targetBytes",
                              "nodeType": "YulIdentifier",
                              "src": "1625:11:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1600:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1600:37:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1600:37:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "1656:5:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1663:4:4",
                                  "type": "",
                                  "value": "0x28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1652:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1652:16:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1670:66:4",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1645:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1645:92:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1645:92:4"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1745:32:4",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1762:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1765:5:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1772:4:4",
                              "type": "",
                              "value": "0x37"
                            }
                          ],
                          "functionName": {
                            "name": "create",
                            "nodeType": "YulIdentifier",
                            "src": "1755:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1755:22:4"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "1745:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 888,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1745:6:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 891,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1625:11:4",
                      "valueSize": 1
                    }
                  ],
                  "id": 897,
                  "nodeType": "InlineAssembly",
                  "src": "1461:323:4"
                }
              ]
            },
            "documentation": null,
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createClone",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 899,
                  "src": "1360:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1359:16:4"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 899,
                  "src": "1394:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1393:16:4"
            },
            "scope": 900,
            "src": "1339:450:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 901,
        "src": "1312:480:4"
      }
    ],
    "src": "33:1761:4"
  },
  "legacyAST": {
    "absolutePath": "/D/Studium/WS_2021/Blockchain/votingdapp/contracts/utilities/CloneFactory.sol",
    "exportedSymbols": {
      "CloneFactory": [
        900
      ]
    },
    "id": 901,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 883,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 900,
        "linearizedBaseContracts": [
          900
        ],
        "name": "CloneFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "1410:379:4",
              "statements": [
                {
                  "assignments": [
                    891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 891,
                      "mutability": "mutable",
                      "name": "targetBytes",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 898,
                      "src": "1417:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 890,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1417:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 896,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 894,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "1447:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1439:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": {
                        "id": 892,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1439:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:15:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1417:37:4"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1470:314:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1479:24:4",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1498:4:4",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1492:5:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1492:11:4"
                        },
                        "variables": [
                          {
                            "name": "clone",
                            "nodeType": "YulTypedName",
                            "src": "1483:5:4",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1518:5:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1525:66:4",
                              "type": "",
                              "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1511:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1511:81:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1511:81:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:5:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1618:4:4",
                                  "type": "",
                                  "value": "0x14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1607:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1607:16:4"
                            },
                            {
                              "name": "targetBytes",
                              "nodeType": "YulIdentifier",
                              "src": "1625:11:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1600:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1600:37:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1600:37:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "1656:5:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1663:4:4",
                                  "type": "",
                                  "value": "0x28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1652:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1652:16:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1670:66:4",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1645:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1645:92:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1645:92:4"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1745:32:4",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1762:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1765:5:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1772:4:4",
                              "type": "",
                              "value": "0x37"
                            }
                          ],
                          "functionName": {
                            "name": "create",
                            "nodeType": "YulIdentifier",
                            "src": "1755:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1755:22:4"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "1745:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 888,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1745:6:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 891,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1625:11:4",
                      "valueSize": 1
                    }
                  ],
                  "id": 897,
                  "nodeType": "InlineAssembly",
                  "src": "1461:323:4"
                }
              ]
            },
            "documentation": null,
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createClone",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 899,
                  "src": "1360:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1359:16:4"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 899,
                  "src": "1394:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1393:16:4"
            },
            "scope": 900,
            "src": "1339:450:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 901,
        "src": "1312:480:4"
      }
    ],
    "src": "33:1761:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-24T18:14:23.001Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}